---
import { getCollection } from "astro:content";
import FormattedDate from "./FormattedDate.astro";

const { count } = Astro.props;

var posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pub.valueOf() - a.data.pub.valueOf()
);
count && (posts = posts.slice(0, count));
---

<!doctype html>
<html lang="en">
  <style lang="scss">
    main {
      width: 960px;
    }
    ul {
      display: flex;
      flex-wrap: wrap;
      gap: 1ch;
      list-style-type: none;
      margin: 0;
      padding: 0;
    }
    ul li {
      width: 100%;
      a,
      div.meta {
        width: calc(100% - 200px);
      }
    }
    ul li * {
      text-decoration: none;
      transition: 0.2s ease;
    }
    ul li img {
      margin-bottom: 0.5rem;
      border-radius: 12px;
    }
    ul li a {
      display: block;
    }
    .title {
      margin: 0;
      color: var(--accent-dark);
      line-height: 1;
    }
    .date {
      margin: 0;
      color: var(--accent-dark);
    }
    ul li a:hover h4,
    ul li a:hover .date {
      font-style: italic;
      text-decoration: underline;
      text-underline-offset: 2px;
    }
    .tags {
      span {
        &:not(:last-child)::after {
          content: ", ";
        }
      }
    }
    div.content {
      display: grid;
      grid-template-columns: 40% 60%;
      grid-column-gap: 10px;
      
    }
    div.metadata,
    div.description {
      label {
        font-family: monospace;
        font-weight: 700;
        display: inline;
      }
      > div {
        padding-bottom: 0px;
        border-bottom: 1.5px dotted var(--accent);
        width: inherit;
      }
      span,
      p {
        font-style: italic;
      }
    }
    p {
      text-decoration: underline dotted var(--accent) 1.5px !important;
      text-underline-offset: 7px;
      line-height: 1.7;
    }
    li.post {
      padding-bottom: 1ch;
      border-bottom: 1px solid var(--accent-dark);
      &:first-child {
        margin-top: 2ch;
      }
    }
  </style>
  <ul>
    {
      posts.map((post) => (
        <li class="post">
          <a href={`/blog/${post.slug}/`}>
            <h4 class="title">{post.data.title}</h4>
          </a>
          <div class="content">
            <div class="metadata">
              <div class="published">
                <label>published: </label>
                <FormattedDate date={post.data.pub} />
              </div>
              {post.data.tags && (
                <div class="tags">
                  <label>tags: </label>
                  <span>
                    {post.data.tags.map((tag) => (
                      <span>{tag}</span>
                    ))}
                  </span>
                </div>
              )}
            </div>
            <div class="description">
              <p>
                <label>synopsis: </label>
                {post.data.description}
              </p>
            </div>
          </div>
        </li>
      ))
    }
  </ul>


</html>
